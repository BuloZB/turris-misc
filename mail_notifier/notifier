#!/bin/sh

base_folder=/tmp/user_notify
locker_stamp=$base_folder/.locked
msg_file=$locker_stamp/msg.mail
msmtp_cfg_file=/tmp/msmtp.cfg
mail_stamp=".sent_by_email$$"

smtp_enabled=`uci get user_notify.smtp.enable`
wanted_severity=`uci get user_notify.notifications.severity`
news_enabled=`uci get user_notify.notifications.news`

create_msmtp_config() {
	username=`uci get user_notify.smtp.username`
	password=`uci get user_notify.smtp.password`
	server=`uci get user_notify.smtp.server`
	port=`uci get user_notify.smtp.port`
	security=`uci get user_notify.smtp.security`
	from=`uci get user_notify.smtp.from`

	echo "account notifier" > $msmtp_cfg_file
	echo "host $server" >> $msmtp_cfg_file
	
	if [ $security == "starttls" ]; then
		echo "tls on" >> $msmtp_cfg_file
		echo "tls_certcheck off" >> $msmtp_cfg_file
	fi

	echo "port $port" >> $msmtp_cfg_file
	echo "auth login" >> $msmtp_cfg_file
	echo "from $from" >> $msmtp_cfg_file
	echo "user $username" >> $msmtp_cfg_file
	echo "password $password" >> $msmtp_cfg_file
	echo "account default: notifier" >> $msmtp_cfg_file
}

compose_message() {
	rm -rf $msg_file* > /dev/null 2>&1 || true

	severity=`uci get user_notify.notifications.severity`
	news=`uci get user_notify.notifications.news`

	msg_list=`ls $base_folder`
	for msg in $msg_list; do
		echo "Working on message: $msg"
		[ -f $base_folder/$msg/.sent_by_email* ] && continue

		if [ -f $base_folder/$msg/news ]; then
			[ $news -eq 0 ] && continue 
			echo -e "$(cat $base_folder/$msg/message)\n" >> $msg_file.news

		elif [ -f $base_folder/$msg/severity ]; then  
			msg_severity=`cat $base_folder/$msg/severity`
			[  $msg_severity -gt $severity ] && continue

			case $msg_severity in
				1) echo -e "$(cat $base_folder/$msg/message)\n" >> $msg_file.restarts ;; 
				2) echo -e "$(cat $base_folder/$msg/message)\n" >> $msg_file.errors ;;
				3) echo -e "$(cat $base_folder/$msg/message)\n" >> $msg_file.updates ;;
				*) echo "Unknown severity: $msg_severity" ;;
			esac
		fi
		
		touch $base_folder/$msg/$mail_stamp
	done

	if [ -f $msg_file.restarts ] || [ -f $msg_file.errors ] || [ -f $msg_file.updates ] || [ -f $msg_file.news ]; then
		echo -e "Subject: Upozorneni od Vaseho routeru Turris\n" > $msg_file
		echo -e "##### Zadosti o restart zarizeni #####" >> $msg_file
		cat $msg_file.restarts >> $msg_file

		echo -e "##### Oznameni o chybach #####" >> $msg_file
		cat $msg_file.errors >> $msg_file

		echo -e "##### Oznameni o aktualizacich #####" >> $msg_file
		cat $msg_file.updates >> $msg_file

		echo -e "##### Oznameni o novinkach #####" >> $msg_file
		cat $msg_file.news >> $msg_file
	fi
}

clear_mail_stamps() {
	find $base_folder -name $mail_stamp -exec rm -rf {} \;
}

lock() {
	mkdir $1 >/dev/null 2>&1
        err_lvl=$?
        if [ $err_lvl -ne 0 ]; then
                echo "Another instance of notifier is running."
                exit 1
        fi
}

unlock() {
	rm -rf $1	
}

send_mail() {
	lock $locker_stamp
	compose_message

	if [ ! -f $msg_file ]; then
		unlock $locker_stamp
		echo "There is no message to send."
		exit 0	
	fi
	
	to=`uci get user_notify.smtp.to`

	cat $msg_file | msmtp -C $msmtp_cfg_file $to
	err_lvl=$?

	if [ $err_lvl -ne 0 ]; then
 		for i in `seq 3`; do 
			sleep 10m
			cat $msg_file | msmtp -C $msmtp_cfg_file $to
			err_lvl=$?
			[ $err_lvl -eq 0 ] && break
		done

		[ $err_lvl -ne 0 ] && clear_mail_stamps
	fi

	unlock $locker_stamp
}

if [ $smtp_enabled -eq 0 ]; then
	echo "User notifications are not enabled."
	exit 0
fi

create_msmtp_config
send_mail
