#!/bin/sh

base_folder=/tmp/user_notify

if [ $1 = -d ] ; then
	base_folder="$2"
	shift 2
fi

locker_stamp=$base_folder/.locked
msg_file=$locker_stamp/msg.mail
msmtp_cfg_file=/tmp/msmtp.cfg
mail_stamp="sent_by_email"

smtp_enabled=`uci get user_notify.smtp.enable`

create_msmtp_config() {
	username=`uci get user_notify.smtp.username`
	password=`uci get user_notify.smtp.password`
	server=`uci get user_notify.smtp.server`
	port=`uci get user_notify.smtp.port`
	security=`uci get user_notify.smtp.security`
	from=`uci get user_notify.smtp.from`

	echo "account notifier" > $msmtp_cfg_file
	echo "host $server" >> $msmtp_cfg_file
	
	if [ $security == "starttls" ]; then
		echo "tls on" >> $msmtp_cfg_file
		echo "tls_certcheck off" >> $msmtp_cfg_file
	fi

	echo "port $port" >> $msmtp_cfg_file
	echo "auth login" >> $msmtp_cfg_file
	echo "from $from" >> $msmtp_cfg_file
	echo "user $username" >> $msmtp_cfg_file
	echo "password $password" >> $msmtp_cfg_file
	echo "account default: notifier" >> $msmtp_cfg_file
}

schedule_restart() {
	delay=`uci get user_notify.reboot.delay`
	time=`uci get user_notify.reboot.time | tr -d ':'`

	curr_time=`date '+%y%m%d'`
	wanted_time=$((curr_time + delay))$time

	echo "reboot" | at -t $wanted_time
	echo -e "Zarizeni bude automaticky restartovano v $(date +'%H:%M %d.%m.%Y' -d $wanted_time).\n" >> $1
}

compose_message() {
	rm -rf $msg_file* > /dev/null 2>&1 || true
	rm -rf $locker_stamp/stamps* > /dev/null 2>&1 || true

	severity=`uci get user_notify.notifications.severity`
	news=`uci get user_notify.notifications.news`

	msg_list=`ls $base_folder`
	for msg in $msg_list; do
		echo "Working on message: $msg"
		[ -f $base_folder/$msg/$mail_stamp ] && continue

		if [ -f $base_folder/$msg/severity ]; then  
			msg_severity=`cat $base_folder/$msg/severity`

			case "$msg_severity" in
				"restart") echo -e "$(cat $base_folder/$msg/message)\n" >> $msg_file.restarts
					   echo $msg >> $locker_stamp/stamps.restarts 
					   ;; 
				"error") echo -e "$(cat $base_folder/$msg/message)\n" >> $msg_file.errors 
				         echo $msg >> $locker_stamp/stamps.errors 
					 ;;
				"update") echo -e "$(cat $base_folder/$msg/message)\n" >> $msg_file.updates
					  echo $msg >> $locker_stamp/stamps.updates 
					  ;;
				"news") echo -e "$(cat $base_folder/$msg/message)\n" >> $msg_file.news
					echo $msg >> $locker_stamp/stamps.news 
					;;
				*) echo "Unknown severity: $msg_severity" 
				   ;;
			esac
		fi
	done

	if [ -f $msg_file.restarts ]; then
		schedule_restart $msg_file.restarts
	fi

	if [ -f $msg_file.restarts ]; then
		cat $locker_stamp/stamps.restarts >> $locker_stamp/stamps
		
		if [ $severity -ge 1 ]; then 
			echo -e "##### Zadosti o restart zarizeni #####" >> $msg_file.tmp
	        	cat $msg_file.restarts >> $msg_file.tmp
		fi
	fi
	if [ -f $msg_file.errors ]; then
		cat $locker_stamp/stamps.errors >> $locker_stamp/stamps

		if [ $severity -ge 2 ]; then
			echo -e "##### Oznameni o chybach #####" >> $msg_file.tmp
			cat $msg_file.errors >> $msg_file.tmp
		fi
	fi
	if [ -f $msg_file.updates ]; then
		cat $locker_stamp/stamps.updates >> $locker_stamp/stamps

		if [ $severity -ge 3 ]; then
			echo -e "##### Oznameni o aktualizacich #####" >> $msg_file.tmp
			cat $msg_file.updates >> $msg_file.tmp
		fi
	fi
	if [ -f $msg_file.news ]; then
		cat $locker_stamp/stamps.news >> $locker_stamp/stamps

		if [ $news -gt 0 ]; then
			echo -e "##### Oznameni o novinkach #####" >> $msg_file.tmp
			cat $msg_file.news >> $msg_file.tmp
		fi
	fi

	if [ -f $msg_file.tmp ]; then
		echo -e "Subject: Upozorneni od Vaseho routeru Turris\n" > $msg_file
		cat $msg_file.tmp >> $msg_file
	fi

}

lock() {
	mkdir $1 >/dev/null 2>&1
        err_lvl=$?
        if [ $err_lvl -ne 0 ]; then
                echo "Another instance of notifier is running."
                exit 1
        fi
}

unlock() {
	rm -rf $1	
}

mark_msgs() {
	for msg in `cat $locker_stamp/stamps`; do
		touch $base_folder/$msg/$mail_stamp
	done
}

send_mail() {
	lock $locker_stamp
	trap 'unlock $locker_stamp' EXIT ABRT QUIT TERM 

	compose_message

	if [ ! -f $msg_file ]; then
		[ -f $locker_stamp/stamps ] && mark_msgs
		unlock $locker_stamp
		echo "There is no message to send."
		exit 0	
	fi
	
	to=`uci get user_notify.smtp.to`
	
	if [ $smtp_enabled -eq 0 ]; then
		mark_msgs
	        echo "User notifications are not enabled."
	else
		cat $msg_file | msmtp -C $msmtp_cfg_file $to
		err_lvl=$?

		[ $err_lvl -eq 0 ] && mark_msgs
	fi

	unlock $locker_stamp
}

create_msmtp_config
send_mail
